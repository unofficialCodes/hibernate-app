<!-- META-INF folder contains Meta information in the persistence.xml -->
<!-- Multiple persistence units can be created for a use case (dataSources etc) -->
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.2"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">

    <persistence-unit name="student_pu" transaction-type="RESOURCE_LOCAL">
        <description>
            Persistence unit for Hibernate
        </description>

        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <class>com.learnHibernate.model.Student</class>

        <!-- Enable Second level cache -->
        <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
        <properties>
            <!--  Package of entities  -->
            <property name="packagesToScan" value="com.learnHibernate.model"/>

            <!-- JPA JDBC connection specific configs -->
            <property name="jakarta.persistence.jdbc.url" value="jdbc:postgresql://localhost/postgres?useSSL=false"/>
            <property name="jakarta.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="jakarta.persistence.jdbc.user" value="postgres"/>
            <property name="jakarta.persistence.jdbc.password" value="root"/>

            <!-- Table/Schema generation -->
            <property name="jakarta.persistence.schema-generation.database.action" value="drop-and-create"/>

            <!-- Hibernate dialect/SQL Query syntax for specific database -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>

            <!-- Secondary level cache provider details -->
<!--            <property name="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider"/>-->

            <!-- Primary key/ID Generation Strategy -->
            <property name="hibernate.id.new_generator_mappings" value="false"/>

            <!-- Query configs -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
        </properties>
    </persistence-unit>
</persistence>