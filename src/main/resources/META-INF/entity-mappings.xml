<!-- Mapping domain object to the table columns through entity-mappings.xml -->
<!-- This can also be achieved by @Entity, @Id, @Column annotations -->
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm" version="1.0">
    <description>Entity mappings/table structure definition here</description>


    <entity class="Student" name="student">

        <!--        <table-generator name="student_tbl_generator" schema="public" pk-column-name="id" allocation-size="1" initial-value="1" pk-column-value="1" table="student_tbl" />-->

        <attributes>
            <id name="id">
                <column name="id" length="255" unique="true" />
                <generated-value strategy="SEQUENCE" generator="studentSequence" />
                <sequence-generator name="studentSequence" initial-value="1" allocation-size="1" sequence-name="student_sequence"/>
            </id>
            <basic name="name" fetch="LAZY" optional="false">
                <column name="name" length="255" updatable="true" nullable="false"/>
            </basic>
            <basic name="email" fetch="LAZY">
                <column name="email" updatable="true" length="255" nullable="false" />
            </basic>
        </attributes>
        <!--        <secondary-table name="student_tbl" schema="public" /> -->
    </entity>
</entity-mappings>